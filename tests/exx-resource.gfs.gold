Lang: PositA warm_A
LangEst: soe


Lang: ComparA warm_A (UsePron i_Pron)
LangEst: minust soojem


Lang: ComplA2 married_A2 (UsePron she_Pron)
LangEst: temaga abielus


Lang: ComplA2 married_A2 (DetNP (DetQuant (PossPron she_Pron) NumPl))
LangEst: tema abielus


Lang: ComplA2 married_A2 (DetNP (DetQuant (PossPron she_Pron) NumSg))
LangEst: tema abielus


Lang: ReflA2 married_A2
LangEst: endaga abielus


Couldn't match expected type A
       against inferred type AP
In the expression: UseA2 married_A2
Lang: SentAP (PositA good_A) (EmbedS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron she_Pron) (UseComp (CompAdv here_Adv)))))
LangEst: hea et tema on siin


Lang: AdAP very_AdA (PositA warm_A)
LangEst: väga soe


Lang: PositAdvAdj warm_A
LangEst: soojalt


Lang: PrepNP in_Prep (DetCN (DetQuant DefArt NumSg) (UseN house_N))
LangEst: majas


Lang: ComparAdvAdj more_CAdv warm_A (UsePN john_PN)
LangEst: rohkem soojalt kui Juhan


Lang: ComparAdvAdjS more_CAdv warm_A (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron he_Pron) (UseV run_V)))
LangEst: rohkem soojalt kui tema jookseb


Lang: SubjS when_Subj (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron she_Pron) (UseV sleep_V)))
LangEst: kui tema magab


Lang: AdNum (AdnCAdv more_CAdv) (NumNumeral (num (pot2as3 (pot1as2 (pot0as1 (pot0 n5))))))
LangEst: rohkem kui viis


Lang: ConjS and_Conj (BaseS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron he_Pron) (UseV walk_V))) (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron she_Pron) (UseV run_V))))
LangEst: tema kõnnib ja tema jookseb


Lang: ConjAP and_Conj (BaseAP (PositA cold_A) (PositA warm_A))
LangEst: külm ja soe


Lang: ConjNP or_Conj (BaseNP (UsePron she_Pron) (UsePron we_Pron))
LangEst: tema või meie


Lang: ConjAdv or_Conj (BaseAdv here_Adv there_Adv)
LangEst: siin või seal


Lang: ConjS either7or_DConj (BaseS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron he_Pron) (UseV walk_V))) (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron she_Pron) (UseV run_V))))
LangEst: kas tema kõnnib või tema jookseb


Lang: ConjAP both7and_DConj (BaseAP (PositA warm_A) (PositA cold_A))
LangEst: nii soe kui ka külm


Lang: ConjNP either7or_DConj (BaseNP (UsePron he_Pron) (UsePron she_Pron))
LangEst: kas tema või tema


Lang: ConjAdv both7and_DConj (BaseAdv here_Adv there_Adv)
LangEst: nii siin kui ka seal


Lang: ImpersCl (UseComp (CompAP (PositA hot_A)))
LangEst: on kuum


Lang: GenericCl (UseV sleep_V)
LangEst: magatakse


Lang: CleftNP (UsePron i_Pron) (UseRCl (TTAnt TPast ASimul) PPos (RelVP IdRP (ComplSlash (SlashV2a do_V2) (UsePron it_Pron))))
LangEst: see on mina kes tegin selle


Lang: CleftAdv here_Adv (UseCl (TTAnt TPast ASimul) PPos (PredVP (UsePron she_Pron) (UseV sleep_V)))
LangEst: see on siin kus tema magas


Lang: ExistNP (DetCN (DetQuant IndefArt NumSg) (UseN house_N))
LangEst: on olemas maja


Lang: ExistIP (IdetCN (IdetQuant which_IQuant NumPl) (UseN house_N))
LangEst: mis majad on olemas


Lang: PredVP (UsePron i_Pron) (ProgrVP (UseV sleep_V))
LangEst: mina olen magamas


Lang: ImpPl1 (UseV go_V)
LangEst: minnakse


Lang: DetCN (DetQuant DefArt NumSg) (UseN man_N)
LangEst: mees


Lang: UsePN john_PN
LangEst: Juhan


Lang: UsePron he_Pron
LangEst: tema


Lang: PredetNP only_Predet (DetCN (DetQuant DefArt NumSg) (UseN man_N))
LangEst: ainult mees


Lang: PPartNP (DetCN (DetQuant DefArt NumSg) (UseN man_N)) see_V2
LangEst: mees nähtud


Lang: AdvNP (UsePN paris_PN) today_Adv
LangEst: Pariis täna


Lang: RelNP (UsePN paris_PN) (UseRCl (TTAnt TPres ASimul) PPos (RelVP IdRP (UseComp (CompAdv here_Adv))))
LangEst: Pariis , kes on siin


Lang: DetNP (DetQuant this_Quant (NumCard (NumNumeral (num (pot2as3 (pot1as2 (pot0as1 (pot0 n5))))))))
LangEst: need viis


Lang: DetCN (DetQuantOrd this_Quant (NumCard (NumNumeral (num (pot2as3 (pot1as2 (pot0as1 (pot0 n5))))))) (OrdSuperl good_A)) (UseN man_N)
LangEst: need viis kõige paremad meest


Lang: DetCN (DetQuant this_Quant (NumCard (NumNumeral (num (pot2as3 (pot1as2 (pot0as1 (pot0 n5)))))))) (UseN man_N)
LangEst: need viis meest


Lang: DetCN (DetQuant this_Quant NumPl) (UseN man_N)
LangEst: need mehed


Lang: DetCN (DetQuant this_Quant NumSg) (UseN man_N)
LangEst: see mees


Lang: NumCard (NumNumeral (num (pot2as3 (pot1as2 (pot0as1 (pot0 n5))))))
LangEst: viis


Lang: NumCard (NumDigits (IIDig D_5 (IDig D_1)))
LangEst: 5 1


Lang: NumCard (NumNumeral (num (pot2as3 (pot1as2 (pot1plus n5 pot01)))))
LangEst: viis &+ kümmend üks


Lang: NumCard (AdNum almost_AdN (NumDigits (IIDig D_5 (IDig D_1))))
LangEst: peaaegu 5 1


Lang: OrdDigits (IIDig D_5 (IDig D_1))
LangEst: 5 1.


Lang: OrdNumeral (num (pot2as3 (pot1as2 (pot1plus n5 pot01))))
LangEst: viies &+ kümnes esimene


Lang: OrdSuperl warm_A
LangEst: kõige soojem


Lang: DetCN (DetQuantOrd DefArt (NumCard (NumNumeral (num (pot2as3 (pot1as2 (pot0as1 (pot0 n5))))))) (OrdSuperl good_A)) (UseN man_N)
LangEst: viis kõige paremad meest


Lang: DetCN (DetQuant DefArt (NumCard (NumNumeral (num (pot2as3 (pot1as2 (pot0as1 (pot0 n5)))))))) (UseN man_N)
LangEst: viis meest


Lang: DetCN (DetQuant IndefArt (NumCard (NumNumeral (num (pot2as3 (pot1as2 (pot0as1 pot01))))))) (UseN man_N)
LangEst: üks mees


Lang: DetCN (DetQuant DefArt (NumCard (NumNumeral (num (pot2as3 (pot1as2 (pot0as1 pot01))))))) (UseN man_N)
LangEst: üks mees


Lang: DetCN (DetQuant DefArt NumSg) (UseN man_N)
LangEst: mees


Lang: DetCN (DetQuant DefArt NumPl) (UseN man_N)
LangEst: mehed


Lang: MassNP (UseN beer_N)
LangEst: õlu


Lang: DetCN (DetQuant (PossPron i_Pron) NumSg) (UseN house_N)
LangEst: minu maja


Lang: UseN house_N
LangEst: maja


Lang: ComplN2 mother_N2 (DetCN (DetQuant DefArt NumSg) (UseN king_N))
LangEst: kuninga ema


Lang: ComplN2 (ComplN3 distance_N3 (DetCN (DetQuant this_Quant NumSg) (UseN city_N))) (UsePN paris_PN)
LangEst: kaugus sellest linnast Pariisi


Lang: UseN2 mother_N2
LangEst: ema


Lang: ComplN2 (Use2N3 distance_N3) (DetCN (DetQuant this_Quant NumSg) (UseN city_N))
LangEst: kaugus sellest linnast


Lang: ComplN2 (Use3N3 distance_N3) (UsePN paris_PN)
LangEst: kaugus Pariisi


Lang: UseN2 (Use2N3 distance_N3)
LangEst: kaugus


Lang: AdjCN (PositA big_A) (UseN house_N)
LangEst: suur maja


Lang: RelCN (UseN house_N) (UseRCl (TTAnt TPast ASimul) PPos (RelSlash IdRP (SlashVP (UsePN john_PN) (SlashV2a buy_V2))))
LangEst: maja kelle Juhan ostis


Lang: AdvCN (UseN house_N) (PrepNP on_Prep (DetCN (DetQuant DefArt NumSg) (UseN hill_N)))
LangEst: maja künkal


Lang: SentCN (UseN question_N) (EmbedQS (UseQCl (TTAnt TPres ASimul) PPos (QuestIAdv where_IAdv (PredVP (UsePron she_Pron) (UseV sleep_V)))))
LangEst: küsimus kus tema magab


Lang: DetCN (DetQuant DefArt NumSg) (ApposCN (UseN city_N) (UsePN paris_PN))
LangEst: linn Pariis


Lang: DetCN (DetQuant (PossPron i_Pron) NumSg) (ApposCN (UseN friend_N) (UsePN john_PN))
LangEst: minu sõber Juhan


Lang: num (pot2as3 (pot1as2 (pot0as1 (pot0 n6))))
LangEst: kuus


Lang: num (pot2as3 (pot1as2 (pot0as1 pot01)))
LangEst: üks


Lang: num (pot2as3 (pot1as2 (pot1 n6)))
LangEst: kuus &+ kümmend


Lang: num (pot2as3 (pot1as2 pot110))
LangEst: kümme


Lang: num (pot2as3 (pot1as2 pot111))
LangEst: üks &+ teist


Lang: num (pot2as3 (pot1as2 (pot1to19 n6)))
LangEst: kuus &+ teist


Lang: num (pot2as3 (pot1as2 (pot1 n6)))
LangEst: kuus &+ kümmend


Lang: num (pot2as3 (pot1as2 (pot1plus n6 (pot0 n5))))
LangEst: kuus &+ kümmend viis


Lang: num (pot2as3 (pot2 (pot0 n4)))
LangEst: neli &+ sada


Lang: num (pot2as3 (pot2plus (pot0 n4) (pot1plus n6 (pot0 n7))))
LangEst: neli &+ sada kuus &+ kümmend seitse


Lang: num (pot3 (pot2plus (pot0 n4) (pot1plus n6 (pot0 n7))))
LangEst: neli &+ sada kuus &+ kümmend seitse tuhat


Lang: num (pot3plus (pot2plus (pot0 n4) (pot1plus n6 (pot0 n7))) (pot1as2 (pot1plus n8 (pot0 n9))))
LangEst: neli &+ sada kuus &+ kümmend seitse tuhat kaheksa &+ kümmend üheksa


Lang: IDig D_8
LangEst: 8


Lang: IIDig D_8 (IIDig D_0 (IIDig D_0 (IIDig D_1 (IIDig D_7 (IIDig D_8 (IDig D_9))))))
LangEst: 8 0 0 1 7 8 9


Lang: PhrUtt but_PConj (UttImpSg PPos (ImpVP (AdvVP (UseV come_V) here_Adv))) (VocNP (DetCN (DetQuant (PossPron i_Pron) NumSg) (UseN friend_N)))
LangEst: aga tule , minu sõber


Lang: PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePN john_PN) (UseV walk_V)))) NoVoc
LangEst: Juhan kõnnib


Lang: UttQS (UseQCl (TTAnt TPres ASimul) PPos (QuestCl (PredVP (UsePron it_Pron) (UseComp (CompAP (PositA good_A))))))
LangEst: kas see on hea


Lang: UttImpSg PNeg (ImpVP (ReflVP (SlashV2a love_V2)))
LangEst: ära armasta ennast


Lang: UttImpPl PNeg (ImpVP (ReflVP (SlashV2a love_V2)))
LangEst: ärge armastage ennast


Lang: UttImpPol PNeg (ImpVP (UseV sleep_V))
LangEst: ärge magage


Lang: UttIP whoPl_IP
LangEst: kes


Lang: UttIP whoSg_IP
LangEst: kes


Lang: UttIAdv why_IAdv
LangEst: miks


Lang: UttNP (DetCN (DetQuant this_Quant NumSg) (UseN man_N))
LangEst: see mees


Lang: UttAdv here_Adv
LangEst: siin


Lang: UttVP (UseV sleep_V)
LangEst: magada


Lang: VocNP (DetCN (DetQuant (PossPron i_Pron) NumSg) (UseN friend_N))
LangEst: , minu sõber


Lang: QuestCl (PredVP (UsePN john_PN) (UseV walk_V))
LangEst: kas Juhan kõnnib


Lang: QuestVP whoSg_IP (UseV walk_V)
LangEst: kes kõnnib


Lang: QuestSlash whoSg_IP (SlashVP (UsePN john_PN) (SlashV2a love_V2))
LangEst: keda Juhan armastab


Lang: QuestIAdv why_IAdv (PredVP (UsePN john_PN) (UseV walk_V))
LangEst: miks Juhan kõnnib


Lang: QuestIComp (CompIAdv where_IAdv) (UsePN john_PN)
LangEst: kus Juhan on


Lang: IdetCN (IdetQuant which_IQuant (NumCard (NumNumeral (num (pot2as3 (pot1as2 (pot0as1 (pot0 n5)))))))) (UseN song_N)
LangEst: mis viis lauli


Lang: IdetIP (IdetQuant which_IQuant (NumCard (NumNumeral (num (pot2as3 (pot1as2 (pot0as1 (pot0 n5))))))))
LangEst: mis viis


Lang: AdvIP whoSg_IP (PrepNP in_Prep (UsePN paris_PN))
LangEst: kes Pariisis


Lang: IdetIP (IdetQuant which_IQuant NumSg)
LangEst: mis


Lang: PrepIP with_Prep whoSg_IP
LangEst: koos kellega


Lang: QuestIComp (CompIAdv where_IAdv) (UsePron it_Pron)
LangEst: kus see on


Lang: QuestIComp (CompIP whoSg_IP) (UsePron it_Pron)
LangEst: kes see on


Lang: ExistNP (DetCN (DetQuant IndefArt NumSg) (RelCN (UseN woman_N) (UseRCl (TTAnt TPres ASimul) PPos (RelCl (PredVP (UsePN john_PN) (ComplSlash (SlashV2a love_V2) (UsePron she_Pron)))))))
LangEst: on olemas naine nii et Juhan armastab teda


Lang: ExistNP (DetCN (DetQuant IndefArt NumSg) (RelCN (UseN woman_N) (UseRCl (TTAnt TPres ASimul) PPos (RelVP IdRP (ComplSlash (SlashV2a love_V2) (UsePN john_PN))))))
LangEst: on olemas naine kes armastab Juhanit


Lang: ExistNP (DetCN (DetQuant IndefArt NumSg) (RelCN (UseN woman_N) (UseRCl (TTAnt TPres ASimul) PPos (RelSlash IdRP (SlashVP (UsePN john_PN) (SlashV2a love_V2))))))
LangEst: on olemas naine keda Juhan armastab


Lang: ExistNP (DetCN (DetQuant IndefArt NumSg) (RelCN (UseN woman_N) (UseRCl (TTAnt TPres ASimul) PPos (RelSlash (FunRP possess_Prep (DetCN (DetQuant DefArt NumSg) (UseN2 mother_N2)) IdRP) (SlashVP (UsePN john_PN) (SlashV2a love_V2))))))
LangEst: on olemas naine kelle ema Juhan armastab


Lang: PredVP (UsePN john_PN) (UseV walk_V)
LangEst: Juhan kõnnib


Lang: PredSCVP (EmbedS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron she_Pron) (UseV go_V)))) (UseComp (CompAP (PositA good_A)))
LangEst: et tema läheb on hea


Lang: RelCN (UseN girl_N) (UseRCl (TTAnt TPres ASimul) PPos (RelSlash IdRP (SlashVP (UsePron he_Pron) (SlashV2a see_V2))))
LangEst: tüdruk kelle tema näeb


Lang: RelCN (UseN girl_N) (UseRCl (TTAnt TPres ASimul) PPos (RelSlash IdRP (AdvSlash (SlashVP (UsePron he_Pron) (SlashV2a see_V2)) today_Adv)))
LangEst: tüdruk kelle tema näeb täna


Lang: RelCN (UseN girl_N) (UseRCl (TTAnt TPres ASimul) PPos (RelSlash IdRP (SlashPrep (PredVP (UsePron he_Pron) (UseV walk_V)) with_Prep)))
LangEst: tüdruk koos kellega tema kõnnib


Lang: RelCN (UseN girl_N) (UseRCl (TTAnt TPres ASimul) PPos (RelSlash IdRP (SlashVS (UsePron she_Pron) say_VS (UseSlash (TTAnt TPres ASimul) PPos (SlashVP (UsePron he_Pron) (SlashV2a love_V2))))))
LangEst: tüdruk keda tema ütleb et tema armastab


Lang: ImpVP (ReflVP (SlashV2a love_V2))
LangEst: armasta ennast


Lang: EmbedS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron she_Pron) (UseV go_V)))
LangEst: et tema läheb


Lang: EmbedQS (UseQCl (TTAnt TPres ASimul) PPos (QuestVP whoSg_IP (UseV go_V)))
LangEst: kes läheb


Lang: EmbedVP (UseV go_V)
LangEst: minna


Lang: UseCl (TTAnt TCond AAnter) PNeg (PredVP (UsePN john_PN) (UseV walk_V))
LangEst: Juhan ei oleks kõndinud


Lang: UseQCl (TTAnt TCond AAnter) PNeg (QuestCl (PredVP (UsePN john_PN) (UseV walk_V)))
LangEst: kas Juhan ei oleks kõndinud


Lang: RelCN (UseN girl_N) (UseRCl (TTAnt TCond AAnter) PNeg (RelVP IdRP (UseV walk_V)))
LangEst: tüdruk kes ei oleks kõndinud


Lang: RelCN (UseN girl_N) (UseRCl (TTAnt TCond AAnter) PNeg (RelSlash IdRP (SlashPrep (PredVP (UsePron i_Pron) (UseV walk_V)) with_Prep)))
LangEst: tüdruk koos kellega mina ei oleks kõndinud


Lang: RelS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron she_Pron) (UseV sleep_V))) (UseRCl (TTAnt TPres ASimul) PPos (RelVP IdRP (UseComp (CompAP (PositA good_A)))))
LangEst: tema magab , kes on hea


Lang: TEmpty
LangEst: 


Lang: TFullStop (PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePN john_PN) (UseV walk_V)))) NoVoc) TEmpty
LangEst: Juhan kõnnib .


Lang: TQuestMark (PhrUtt NoPConj (UttQS (UseQCl (TTAnt TPres ASimul) PPos (QuestCl (PredVP (UsePron they_Pron) (UseComp (CompAdv here_Adv)))))) NoVoc) TEmpty
LangEst: kas nemad on siin ?


Lang: TExclMark (PhrUtt NoPConj (ImpPl1 (UseV go_V)) NoVoc) TEmpty
LangEst: minnakse !


Lang: PredVP (UsePron i_Pron) (UseV sleep_V)
LangEst: mina magan


Lang: PredVP (UsePron i_Pron) (ComplVV want_VV (UseV run_V))
LangEst: mina tahan joosta


Lang: PredVP (UsePron i_Pron) (ComplVS say_VS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron she_Pron) (UseV run_V))))
LangEst: mina ütlen et tema jookseb


Lang: PredVP (UsePron i_Pron) (ComplVQ wonder_VQ (UseQCl (TTAnt TPres ASimul) PPos (QuestVP whoSg_IP (UseV run_V))))
LangEst: mina arutlen kes jookseb


Lang: PredVP (UsePron they_Pron) (ComplVA become_VA (PositA red_A))
LangEst: nemad saavad punasteks


Lang: PredVP (UsePron i_Pron) (ComplSlash (Slash3V3 give_V3 (UsePron he_Pron)) (UsePron it_Pron))
LangEst: 


Lang: PredVP (UsePron i_Pron) (ComplSlash (SlashV2V beg_V2V (UseV go_V)) (UsePron she_Pron))
LangEst: mina palun teda minema


Lang: PredVP (UsePron i_Pron) (ComplSlash (SlashV2S answer_V2S (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron it_Pron) (UseComp (CompAP (PositA good_A)))))) (UsePron he_Pron))
LangEst: mina vastan temale et see on hea


Lang: PredVP (UsePron i_Pron) (ComplSlash (SlashV2Q ask_V2Q (UseQCl (TTAnt TPast ASimul) PPos (QuestVP whoSg_IP (UseV come_V)))) (UsePron he_Pron))
LangEst: mina küsin temalt kes tuli


Lang: PredVP (UsePron i_Pron) (ComplSlash (SlashV2A paint_V2A (PositA red_A)) (UsePron it_Pron))
LangEst: 


Lang: RelCN (UseN car_N) (UseRCl (TTAnt TPres ASimul) PPos (RelSlash IdRP (SlashVP (UsePron i_Pron) (SlashVV want_VV (SlashV2a buy_V2)))))
LangEst: 


Lang: RelCN (UseN car_N) (UseRCl (TTAnt TPres ASimul) PPos (RelSlash IdRP (SlashVP (UsePron they_Pron) (SlashV2VNP beg_V2V (UsePron i_Pron) (SlashV2a buy_V2)))))
LangEst: 


Lang: PredVP (UsePron he_Pron) (ReflVP (SlashV2a love_V2))
LangEst: tema armastab ennast


Lang: PredVP (DetNP (DetQuant this_Quant NumSg)) (UseComp (CompAP (PositA warm_A)))
LangEst: see on soe


Lang: PredVP (UsePron we_Pron) (PassV2 love_V2)
LangEst: meid armastatakse


Lang: PredVP (UsePron we_Pron) (AdvVP (UseV sleep_V) here_Adv)
LangEst: meie magame siin


Lang: PredVP (UsePron we_Pron) (AdVVP always_AdV (UseV sleep_V))
LangEst: meie magame alati


Lang: PredVP (UsePron we_Pron) (UseComp (CompAP (PositA small_A)))
LangEst: meie oleme väiksed


Lang: PredVP (UsePron i_Pron) (UseComp (CompNP (DetCN (DetQuant IndefArt NumSg) (UseN man_N))))
LangEst: mina olen mees


Lang: PredVP (UsePron i_Pron) (UseComp (CompAdv here_Adv))
LangEst: mina olen siin


Lang: RelCN (UseN car_N) (UseRCl (TTAnt TPres ASimul) PPos (RelSlash IdRP (SlashVP (UsePron they_Pron) (SlashV2VNP beg_V2V (UsePron i_Pron) (SlashVV want_VV (SlashV2A paint_V2A (PositA red_A)))))))
LangEst: 


Lang: PhrUtt NoPConj (UttImpSg PPos (ImpVP (AdVVP always_AdV (ComplSlash (SlashV2a listen_V2) (DetCN (DetQuant DefArt NumSg) (UseN sea_N)))))) NoVoc
LangEst: kuula meri


Lang: PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (ExistNP (PredetNP only_Predet (DetCN (DetQuant IndefArt (NumCard (NumNumeral (num (pot2as3 (pot1as2 (pot0as1 (pot0 n2)))))))) (AdvCN (RelCN (UseN woman_N) (UseRCl (TTAnt TCond ASimul) PPos (RelSlash IdRP (SlashPrep (PredVP (UsePron i_Pron) (ComplVV want_VV (PassV2 see_V2))) with_Prep)))) (PrepNP in_Prep (DetCN (DetQuant DefArt NumSg) (UseN rain_N))))))))) NoVoc
LangEst: on olemas ainult kaks naist koos kellega mind tahaks nähakse vihmis


Lang: PhrUtt NoPConj (UttImpSg PPos (ImpVP (ComplSlash (SlashV2A paint_V2A (ConjAP both7and_DConj (BaseAP (ComparA small_A (DetCN (DetQuant DefArt NumSg) (UseN sun_N))) (ComparA big_A (DetCN (DetQuant DefArt NumSg) (UseN moon_N)))))) (DetCN (DetQuant DefArt NumSg) (UseN earth_N))))) NoVoc
LangEst: 


Lang: PhrUtt NoPConj (ImpPl1 (ComplVS hope_VS (ConjS either7or_DConj (BaseS (UseCl (TTAnt TPres ASimul) PPos (PredVP (DetCN (DetQuant DefArt NumSg) (ComplN2 father_N2 (DetCN (DetQuant DefArt NumSg) (UseN baby_N)))) (UseV run_V))) (UseCl (TTAnt TPres ASimul) PPos (PredVP (DetCN (DetQuant DefArt NumSg) (UseN2 (Use2N3 distance_N3))) (UseComp (CompAP (PositA small_A))))))))) NoVoc
LangEst: loodetakse et kas beebi isa jookseb või kaugus on väike


Lang: PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (DetCN every_Det (UseN baby_N)) (UseComp (CompNP (ConjNP either7or_DConj (BaseNP (DetCN (DetQuant IndefArt NumSg) (UseN boy_N)) (DetCN (DetQuant IndefArt NumSg) (UseN girl_N))))))))) NoVoc
LangEst: iga beebi on kas poiss või tüdruk


Lang: PhrUtt NoPConj (UttAdv (ConjAdv either7or_DConj (ConsAdv here7from_Adv (BaseAdv there_Adv everywhere_Adv)))) NoVoc
LangEst: kas siit , seal või kõikjal


Lang: PhrUtt NoPConj (UttVP (PassV2 know_V2)) NoVoc
LangEst: tuntakse


Lang: RelCN (UseN bird_N) (UseRCl (TTAnt TPres ASimul) PPos (RelSlash IdRP (SlashVP (UsePron i_Pron) (SlashVV want_VV (SlashV2A paint_V2A (PositA red_A))))))
LangEst: 


Lang: UttImpSg PPos (ImpVP (ComplVV want_VV (ComplSlash (SlashV2a buy_V2) (UsePron it_Pron))))
LangEst: taha selle osta


Lang: UttImpSg PPos (ImpVP (ComplVV want_VV (ComplSlash (SlashV2A paint_V2A (PositA red_A)) (UsePron it_Pron))))
LangEst: 


Lang: UttImpSg PPos (ImpVP (ComplSlash (SlashVV want_VV (SlashV2VNP beg_V2V (UsePron i_Pron) (SlashV2a buy_V2))) (UsePron it_Pron)))
LangEst: 


Lang: PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (DetCN (DetQuant DefArt NumPl) (UseN fruit_N)) (ReflVP (Slash3V3 sell_V3 (DetCN (DetQuant DefArt NumSg) (UseN road_N))))))) NoVoc
LangEst: 


Lang: PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron i_Pron) (ReflVP (SlashV2V beg_V2V (UseV live_V)))))) NoVoc
LangEst: mina palun ennast elama


Lang: PhrUtt NoPConj (UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (UsePron i_Pron) (ReflVP (SlashV2S answer_V2S (UseCl (TTAnt TPres ASimul) PPos (ImpersCl (ComplVV must_VV (ReflVP (SlashV2a understand_V2)))))))))) NoVoc
LangEst: mina vastan endale et peab endast aru saama


Lang: PhrUtt NoPConj (UttImpSg PPos (ImpVP (ReflVP (SlashV2Q ask_V2Q (UseQCl (TTAnt TPast ASimul) PPos (QuestVP whoSg_IP (UseV come_V))))))) NoVoc
LangEst: küsi endalt kes tuli


Lang: PhrUtt NoPConj (UttS (UseCl (TTAnt TPast ASimul) PPos (PredVP (UsePron i_Pron) (ReflVP (SlashV2A paint_V2A (ComparA beautiful_A (UsePN john_PN))))))) NoVoc
LangEst: 


Lang: UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (DetCN (DetQuant this_Quant NumSg) (UseN grammar_N)) (ComplSlash (SlashV2a speak_V2) (DetCN (DetQuant IndefArt (NumCard (NumNumeral (num (pot2as3 (pot1as2 (pot1to19 n2))))))) (UseN language_N)))))
LangEst: see grammatika räägib kahte &+ teist keeli


Lang: UseCl (TTAnt TPast AAnter) PPos (PredVP (UsePron she_Pron) (ComplSlash (SlashV2a buy_V2) (DetCN (DetQuant IndefArt NumSg) (AdjCN (PositA red_A) (UseN house_N)))))
LangEst: tema oli punase maja ostnud


